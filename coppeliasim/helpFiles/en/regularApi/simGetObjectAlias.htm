<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>sim.getObjectAlias</title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<h1>Regular API function</h1>
<p class=subsectionBar><a name="simGetObjectAlias" id="simGetObjectAlias"></a>simGetObjectAlias / sim.getObjectAlias </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the alias or path of an object based on its handle. See also <a href="simSetObjectAlias.htm">sim.setObjectAlias</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=apiTableRightCSyn>char* simGetObjectAlias(int objectHandle,int options)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCParam>C/C++<br>parameters</td> 
<td class=apiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object.</div>
<div><strong>options</strong>: alias formatting options:</div>
<div class=tab>-1: naked alias (e.g. "alias")</div>
<div class=tab>0: ordered alias (e.g. "alias[0]")</div>
<div class=tab>1: short path that fully identifies the object (e.g. "/parent/alias[0]")</div>
<div class=tab>2: full path (e.g. "/parentA/parentB/alias[0]")</div>
<div class=tab>3: naked alias with handle, if the alias is not unique (e.g. "alias" or "alias__42__")</div>
<div class=tab>4: naked alias with handle (e.g. "alias__42__")</div>
<div class=tab>5: print version of the short path, not guaranteed to be unique (e.g. &quot;/parent/ ... /alias&quot;)</div>
<div class=tab>6: path using just the alias and an index number (e.g. "/alias{3}")</div>
<div class=tab>7: same as 6, but using the first parent model, if present (e.g. "/parentModel{2}/alias{3}")</div>
<div class=tab>8: same as 6, but using the first 2 parent models, if present (e.g. "/parentModelA{4}/parentModelB{2}/alias{3}")</div>
<div class=tab>9: same as 6, but using all parent models, if present (e.g. "/parentModelA{4}/.../parentModelN{2}/alias{3}")</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=apiTableRightCRet>
<div>Alias or path of the object if operation was successful, nullptr otherwise. The user is in charge of destroying the returned buffer with <a href="simReleaseBuffer.htm">simReleaseBuffer</a><br>
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua<br>synopsis
</td> 
<td class=apiTableRightLSyn>string alias=sim.getObjectAlias(int objectHandle,int options=-1)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua<br>parameters</td> 
<td class=apiTableRightLParam>
<div>Similar to the C-function counterpart</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua<br>return values
</td> 
<td class=apiTableRightLRet>
<div>Similar to the C-function counterpart</div>
</td> 
</tr> 

 



<tr class=apiTableTr>
<td class=apiTableLeftPSyn>Python<br>synopsis</td>
<td class=apiTableRightPSyn>string alias=sim.getObjectAlias(int objectHandle,int options=-1)</td>
</tr>

</table> 

<br>
</td>

</table>
</div>
</body>
</html>
